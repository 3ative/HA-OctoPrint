substitutions:
  sensor_update_interval: "10s"

esphome:
  name: "ender-3-v2-plug" # Same as your ESPHome YAML File
  friendly_name: "Ender 3 V2 Plug"
  area: "Office"
  min_version: 2024.6.0
  on_boot:
    - priority: 600
      then:
        - select.set_index:
            id: power_mode
            index: !lambda |-
                    return id(restore_mode)-1;
        - lambda: |-
              switch(id(restore_mode))
              {
              case 1:{
                      id(relay).turn_off();
                      break;
                            }
              case 2:{
                      id(relay).turn_on();
                      break;
                            }
              default:{
                      break;
                            }
              }

esp8266:
  board: esp8285
  restore_from_flash: true

preferences:
  flash_write_interval: 5min

api:

ota:
  - platform: esphome

logger:
  level: INFO
  baud_rate: 0

mdns:
  disabled: false

web_server:
  port: 80

wifi:
  fast_connect: True
  ssid: !secret wifi_ssid
  password: !secret wifi_password

uart:
  rx_pin: RX
  baud_rate: 4800
  parity: EVEN

globals:
  - id: total_energy
    type: float
    restore_value: yes
    initial_value: '0.0'
  - id: restore_mode
    type: int
    restore_value: yes
    initial_value: "2"      # 0 = Always_Off. 1 = Restore_Power_Off. 2 = Always_On.

select:
  - platform: template
    name: "Power On State"
    id: "power_mode"
    optimistic: true
    icon: mdi:electric-switch
    options:
      - Always Off
      - Always On
      - Restore Power Off State
    on_value:
      then:
        - lambda: |-
            id(restore_mode)=i+1;

binary_sensor:
  - platform: status
    name: "Status"
    icon: mdi:check-network-outline
    entity_category: diagnostic

  - platform: gpio
    pin:
      number: 5
      mode: INPUT_PULLUP
      inverted: true
    id: power_button
    name: "Power Button"
    disabled_by_default: true
    on_multi_click:
      - timing:
        - ON for at most 1s
        - OFF for at least 0.2s
        then:
          - switch.toggle: relay
      - timing:
        - ON for at least 4s
        then:
          - button.press: Reset

  - platform: homeassistant
    id: printing
    entity_id: binary_sensor.ender_3_v2_printing
    internal: true

sensor:
  - platform: homeassistant
    name: Ender 3 V2 Bed Temp Test
    id: bed_temp
    entity_id: sensor.ender_3_v2_actual_bed_temp
    on_value:
      - if:
          condition:
            and:
              - binary_sensor.is_off: printing
              - switch.is_off: master
              - lambda: "return id(bed_temp).state < 55;"
          then:
            - homeassistant.service:
                action: button.press
                data:
                  entity_id: button.ender_3_v2_shutdown_system
            - delay: 15s
            - switch.turn_off: relay

  - platform: cse7766
    id: athom_cse7766
    current:
      name: "Current"
      icon: mdi:current-ac
      filters:
        - throttle_average: ${sensor_update_interval}
        - lambda: if (x < 0.060) return 0.0; else return x;   #For the chip will report less than 3w power when no load is connected
      on_value_range:
        - above: 16
          then:
            - switch.turn_off: relay

    power:
      name: "Power"
      id: power_sensor
      icon: mdi:power
      filters:
        - throttle_average: ${sensor_update_interval}
        - lambda: if (x < 3.0) return 0.0; else return x;    #For the chip will report less than 3w power when no load is connected

    energy:
      name: "Energy"
      id: energy
      icon: mdi:lightning-bolt
      unit_of_measurement: kWh
      filters:
        - throttle: ${sensor_update_interval}
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
      on_value:
        then:
          - lambda: |-
              static float previous_energy_value = 0.0;
              float current_energy_value = id(energy).state;
              id(total_energy) += current_energy_value - previous_energy_value;
              previous_energy_value = current_energy_value;
              id(total_energy_sensor).update();

    voltage:
      name: "Voltage"
      icon: mdi:power
      accuracy_decimals: 2
      filters:
        - throttle_average: ${sensor_update_interval}

    apparent_power:
      name: "Apparent Power"
      icon: mdi:power
      filters:
        - throttle_average: ${sensor_update_interval}

    reactive_power:
      name: "Reactive Power"
      icon: mdi:flash
      filters:
        - throttle_average: ${sensor_update_interval}

    power_factor:
      name: "Power Factor"
      icon: mdi:percent-outline
      filters:
        - throttle_average: ${sensor_update_interval}

  - platform: template
    name: "Total Energy"
    id: total_energy_sensor
    unit_of_measurement: kWh
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    accuracy_decimals: 3
    lambda: |-
      return id(total_energy);
    update_interval: ${sensor_update_interval}

  - platform: total_daily_energy
    name: "Total Energy Since Boot"
    restore: true
    power_id: power_sensor
    unit_of_measurement: kWh
    icon: mdi:hours-24
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

button:
  - platform: restart
    name: "Restart"
    entity_category: config

  - platform: factory_reset
    name: "Factory Reset"
    id: Reset
    entity_category: config

  - platform: safe_mode
    name: "Safe Mode"
    internal: false
    entity_category: config

switch:
  - platform: gpio
    name: "Switch"
    pin: GPIO12
    id: relay
    restore_mode: RESTORE_DEFAULT_OFF
    icon: mdi:power-socket-uk

  - platform: template
    id: master
    name: "Master"
    icon: mdi:printer
    # restore_mode: true
    optimistic: true
    on_turn_on:
      - switch.turn_on: relay

light:
  - platform: status_led
    name: "Status LED"
    id: blue_led
    icon: mdi:lightbulb-outline
    disabled_by_default: true
    pin:
      inverted: true
      number: GPIO13

time:
  - platform: sntp
    id: sntp_time
